services:
  kurrentdb:
    image: kurrentplatform/kurrentdb:25.0.1-x64-8.0-bookworm-slim
    environment:
      KURRENTDB_CLUSTER_SIZE: 1
      KURRENTDB_RUN_PROJECTIONS: 'All'
      KURRENTDB_START_STANDARD_PROJECTIONS: 'true'
      KURRENTDB_NODE_PORT: 2113
      KURRENTDB_INSECURE: 'true'
      KURRENTDB_ENABLE_ATOM_PUB_OVER_HTTP: 'true'
    ports:
      - '34605:2113'
    volumes:
      - type: volume
        source: kurrentdb-volume-data
        target: /var/lib/kurrentdb
      - type: volume
        source: kurrentdb-volume-logs
        target: /var/log/kurrentdb
    # networks:
    #   - esdb_network

  # mongo1:
  #   image: mongo:7.0
  #   command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
  #   ports:
  #     - 27017:27017
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'
  #   healthcheck:
  #     test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
  #     interval: 5s
  #     timeout: 30s
  #     start_period: 0s
  #     start_interval: 1s
  #     retries: 30
  #   volumes:
  #     - 'mongo1_data:/data/db'
  #     - 'mongo1_config:/data/configdb'

  redis:
    image: redis:8-alpine
    restart: always
    ports:
      - '6379:6379'

  postgres:
    image: postgres:17-alpine
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nest_es_bull_pg
      - DEBUG=false
    ports:
      - '5432:5432'
    volumes:
      - ${TEMP}/pg15data:/var/lib/postgresql/data
      # - db:/var/lib/postgresql/data

# networks:
#   esdb_network:
#     driver: bridge

volumes:
  mongo1_data:
  mongo1_config:
  kurrentdb-volume-data:
  kurrentdb-volume-logs:
  # db:
  #   driver: local
